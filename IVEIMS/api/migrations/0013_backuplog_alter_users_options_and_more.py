# Generated by Django 5.1.6 on 2025-03-02 10:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0012_alter_users_role"),
    ]

    operations = [
        migrations.CreateModel(
            name="BackupLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Success"), ("failed", "Failed")],
                        max_length=50,
                    ),
                ),
                ("file_path", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "backup_logs",
            },
        ),
        migrations.AlterModelOptions(
            name="users",
            options={},
        ),
        migrations.AlterUniqueTogether(
            name="booking",
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name="equipment",
            name="lab",
        ),
        migrations.AddField(
            model_name="booking",
            name="checked_in_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="booking",
            name="checked_out_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="booking",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("approved", "Approved"),
                    ("rejected", "Rejected"),
                ],
                default="pending",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="equipment",
            name="category",
            field=models.CharField(
                choices=[
                    ("electrical", "Electrical"),
                    ("mechanical", "Mechanical"),
                    ("consumable", "Consumable"),
                    ("medical", "Medical"),
                ],
                default="electrical",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="equipment",
            name="needs_sterilization",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="project",
            name="equipment",
            field=models.ManyToManyField(related_name="projects", to="api.equipment"),
        ),
        migrations.AddField(
            model_name="project",
            name="members",
            field=models.ManyToManyField(
                related_name="projects", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="progress",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="users",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="status",
            field=models.CharField(
                choices=[
                    ("available", "Available"),
                    ("in_use", "In Use"),
                    ("maintenance", "Maintenance"),
                ],
                default="available",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="unique_code",
            field=models.CharField(editable=False, max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name="maintenancereminders",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("sent", "Sent"),
                    ("completed", "Completed"),
                ],
                default="pending",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="users",
            name="role",
            field=models.CharField(
                choices=[
                    ("admin", "Admin"),
                    ("student", "Student"),
                    ("lab_manager", "Lab Manager"),
                    ("technician", "Technician"),
                ],
                default="student",
                max_length=20,
            ),
        ),
        migrations.AlterModelTable(
            name="booking",
            table="bookings",
        ),
        migrations.CreateModel(
            name="Lab",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("DS", "Design Studio"),
                            ("CL", "Cezeri Lab"),
                            ("MT", "MedTech Lab"),
                        ],
                        max_length=2,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"role": "lab_manager"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_labs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "labs",
            },
        ),
        migrations.CreateModel(
            name="BorrowRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("request_date", models.DateTimeField(auto_now_add=True)),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.equipment"
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owning_lab",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests_received",
                        to="api.lab",
                    ),
                ),
                (
                    "requesting_lab",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests_made",
                        to="api.lab",
                    ),
                ),
            ],
            options={
                "db_table": "borrow_requests",
            },
        ),
        migrations.CreateModel(
            name="AssetTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transfer_date", models.DateTimeField(auto_now_add=True)),
                ("is_synced", models.BooleanField(default=False)),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.equipment"
                    ),
                ),
                (
                    "from_lab",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers_out",
                        to="api.lab",
                    ),
                ),
                (
                    "to_lab",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers_in",
                        to="api.lab",
                    ),
                ),
            ],
            options={
                "db_table": "asset_transfers",
            },
        ),
        migrations.AddField(
            model_name="booking",
            name="lab_space",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.lab",
            ),
        ),
        migrations.AddField(
            model_name="users",
            name="lab",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.lab",
            ),
        ),
        migrations.AlterField(
            model_name="equipment",
            name="current_lab",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.lab"
            ),
        ),
        migrations.CreateModel(
            name="MaintenanceLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_performed", models.DateTimeField()),
                ("details", models.TextField()),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.equipment"
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "maintenance_logs",
            },
        ),
        migrations.CreateModel(
            name="ProjectAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("allocation_start", models.DateField()),
                ("allocation_end", models.DateField()),
                (
                    "allocated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.equipment"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.project"
                    ),
                ),
            ],
            options={
                "db_table": "project_allocations",
            },
        ),
        migrations.CreateModel(
            name="ProjectDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="projects/%Y/%m/%d/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.project"
                    ),
                ),
            ],
            options={
                "db_table": "project_documents",
            },
        ),
        migrations.DeleteModel(
            name="AssetTransfers",
        ),
    ]
